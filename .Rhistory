source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
id <- c(10:16)
gender <- c('M','F','M','F','M','F','M')
name <- c('Max','Lily','Lewis','Fiona','Ricciardo','Nina','Arjun')
marks <- c(48,20,18,50,48,36,44)
data <- data.frame(id, name, gender, marks)
print(data)
id <- c(10:14)
gender <- c('M','F','M','F','M')
name <- c('Max','Lily','Lewis','Fiona','Ricciardo')
marks <- c(48,20,18,50,48)
data <- data.frame(id,name,gender,marks)
print(data)
id <- c(10:14)
gender <- c('M','F','M','F','M')
name <- c('Max','Lily','Lewis','Fiona','Ricciardo')
marks <- c(48,20,18,50,48)
data <- data.frame(id,name,gender,marks)
print(data)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
summary(data)
rec <-r(16,'Babu','M',47)
source("D:/RAJAGIRI/S3/BMAAR/R Programs/DataFrame_Intro.R")
source("D:/RAJAGIRI/S3/BMAAR/R Programs/DataFrame_Intro.R")
source("D:/RAJAGIRI/S3/BMAAR/R Programs/DataFrame_Intro.R")
print(data)
source("D:/RAJAGIRI/S3/BMAAR/R Programs/DataFrame_Intro.R")
rec <- data.frame(id=17,name='Shibu',
gender='M',
marks=41)
data <- rbind(data,rec)
print(data)
source("D:/RAJAGIRI/S3/BMAAR/R Programs/DataFrame_Intro.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
summary(df)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
summary(df)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
install.packages("tidyr")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/who_case_study.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/who_case_study.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/who_case_study.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/who_case_study.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/who_case_study.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/who_case_study.R")
install.packages(tidyverse)
install.packages("tidyverse")
who
who
# Installing Tidyverse Package
install.packages("tidyverse")
library(dplyr)
who
library(tidyr)
library(dplyr)
who
# Viewing the data
view(who)
view(data)
data <- who
view(data)
# Viewing the data
data <- who
View(data)
selected <- select(data,-country,-iso2,-iso3,-year)
selected
data <- separate(data,colnames(selected), into = c("Old/New","type","sexandage"),sep = "_")
mydata <- airquality
mydata
View(mydata)
is.na(mydata$Ozone)
mydata <- airquality
mydata<-na.omit(mydata)
mydata
View(mydata)
# Replace with mean
mydata$Ozone <- ifelse(is.na(mydata$Ozone),mean(mydata$Ozone),mydata$Ozone)
View(mydata)
View(mydata)
View(mydata)
View(mydata)
mydata <- airquality
View(airquality)
mydata <- airquality
# View(airquality)
View(mydata)
# Replace with mean
mydata$Ozone <- ifelse(is.na(mydata$Ozone),mean(mydata$Ozone),mydata$Ozone)
View(mydata)
# Replace with mean
mydata$Ozone <- ifelse(is.na(mydata$Ozone),mean(mydata$Ozone,na.rm = TRUE),mydata$Ozone)
View(mydata)
mean(mydata$Ozone)
# Replace with mean
mydata$Solar.R <- ifelse(is.na(mydata$Solar.R),mean(mydata$Solar.R,na.rm = TRUE),mydata$Solar.R)
View(mydata)
mydata$danger <- ifelse(mydata$Solar.R>100,TRUE)
mydata$danger <- ifelse(mydata$Solar.R>100,TRUE,FALSE)
View(mydata)
mydata$Month <- factor(mydata$Month,level = c(5,6,7,8,9),
labels = c("May","June","July","August","September"))
View(mydata)
mydata$Solar.R <- scale(mydata$Solar.R)
View(mydata)
install.packages(caTools)
install.packages("caTools")
library(caTools)
split <- sample.split(mydata,split=TRUE)
library(caTools)
split <- sample.split(mydata,split==TRUE)
library(caTools)
split <- sample.split(mydata,split=TRUE)
split <- sample.split(mydata,split==TRUE)
library(caTools)
split <- sample.split(mydata,SplitRatio = 0.8)
View(split)
train<-subset(mydata,split==TRUE)
View(train)
test<-subset(mydata,split==FALSE)
View(test)
df<- read.csv("D:\RAJAGIRI\S3\BMAAR\R-Programs\Datasets\cars.csv")
df<- read.csv("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/cars.csv")
df<- read.csv("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/car.csv")
View(df)
data <- read.csv("car.csv")
data <- read.csv("car.csv")
View(data)
x <- c(15,20,60,35)
y <- c("Wagon R","Alto", "Swift","Dzire")
pie(x,y, main = "Pie Chart Demo")
data <- read.csv("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/car.csv")
View(data)
h <-data$city_mpg
g <- data$highway_mpg
hist(h,xlab = "City MPG",
ylab = "Highway MPG")
#histogram
hist(h)
#histogram
hist(h)
hist(g)
hist(g)
hist(h)
hist(h,xlab = "City MPG")
hist(h,xlab = "City MPG",col = "green",border = "red")
hist(h,xlab = "City MPG",col = "violet",border = "red")
hist(h,xlab = "City MPG",col = "violet",border = "black")
hist(h,xlab = "City MPG",col = "yellow",border = "black")
hist(h,xlab = "City MPG",col = "orange",border = "black")
hist(g,xlab = "Highway MPG",col = "blue",border = "black")
hist(g,xlab = "Highway MPG",col = "blue",border = "white")
plot(h,g,col = "red",xlab = "City Mileage",ylab = "Highway Mileage")
plot(h,g,col = "red",xlab = "City Mileage",ylab = "Highway Mileage", main = "Scatter Plot")
# scatter plot
plot(h,type = "l",col = "green")
# Line plot
plot(h,type = "l",col = "green")
# Line plot
plot(h,type = "l",col = "orange")
# Line plot
plot(h,type = "l",col = "black")
# Scatter plot
plot(h,g,col = "red",xlab = "City Mileage",
ylab = "Highway Mileage", main = "Scatter Plot")
# Scatter plot
plot(h,g,col = "blue",xlab = "City Mileage",
ylab = "Highway Mileage", main = "Scatter Plot")
# Scatter plot
plot(h,g,col = "violet",xlab = "City Mileage",
ylab = "Highway Mileage", main = "Scatter Plot")
# Line Plot
line(h)
# Line Plot
line(h)
# Line Plot
line(h)
plot(h, type = "l", col = "black",
xlab = "Car Index", ylab = "City MPG",
main = "Line Plot of City MPG (by Car Index)")
hist(h,xlab = "City MPG",col = "orange",border = "black")
hist(g,xlab = "Highway MPG",col = "blue",border = "white")
hist(h, xlab = "City MPG", col = "orange", border = "black",
main = "Histogram of City MPG") # Added a main title
plot(h, type = "l", col = "black",
xlab = "Car Index", ylab = "City MPG",
main = "Line Plot of City MPG (by Car Index)")
boxplot(h, main = "Box Plot of City MPG", ylab = "City MPG", col = "lightgreen")
boxplot(h, g,
names = c("City MPG", "Highway MPG"),
main = "Box Plots of City and Highway MPG",
ylab = "MPG",
col = c("lightgreen", "lightblue"))
dev.new()
plot(density(h), main = "Density Plot of City MPG",
xlab = "City MPG", col = "red", lwd = 2) # lwd for line width
polygon(density(h), col = rgb(1, 0, 0, 0.2))
plot(density(g), main = "Density Plot of Highway MPG",
xlab = "Highway MPG", col = "darkblue", lwd = 2)
polygon(density(g), col = rgb(0, 0, 1, 0.2))
data$manufacturer <- sample(c("Toyota", "Honda", "Ford", "BMW"), nrow(data), replace = TRUE)
manufacturer_counts <- table(data$manufacturer)
barplot(manufacturer_counts,
main = "Number of Cars by Manufacturer",
xlab = "Manufacturer",
ylab = "Count",
col = rainbow(length(manufacturer_counts)))
plot(h, g, col = "violet", xlab = "City Mileage",
ylab = "Highway Mileage", main = "Scatter Plot with Regression Line")
abline(lm(g ~ h), col = "red", lwd = 2)
source("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/CarPlots.R")
source("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/CarPlots.R")
source("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/CarPlots.R")
source("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/CarPlots.R")
install.packages("ggplot2")
library("ggplot2")
ggplot(data=data,aes(x=price))+geom_histogram(fill='darkorchid3',col='darkorange',bins=30)
data <- read.csv("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/car.csv")
View(data)
library("ggplot2")
ggplot(data=data,aes(x=price))+geom_histogram(fill='darkorchid3',col='darkorange',bins=30)
ggplot(data=data1,aes(x=price,fill=fuel_type))+geom_histogram()
ggplot(data=data1,aes(x=price,fill=fuel_type))+geom_histogram()
ggplot(data=data,aes(x=price,fill=fuel_type))+geom_histogram()
ggplot(data=data,aes(x=body_style,fill=fuel_type))+geom_histogram()
ggplot(data=data,aes(x=price,fill=fuel_type))+geom_histogram()
fuel_type
ggplot(data=data,aes(x=body_style,fill=fuel_type))+geom_histogram()
ggplot(data=data,aes(x=price,fill=body_style))+geom_histogram()
ggplot(data=data,aes(x=price,fill=body_style))+geom_histogram()
ggplot(data =data,
aes(x = city_mpg,
y = price, fill = fuel_type))
+ geom_col
ggplot(data =data,
aes(x = city_mpg,
y = price, fill = fuel_type))+ geom_col()
ggplot(data=data,
aes(x=length,
y = width)) + geom_line()
source("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/CarPlots.R")
data<-read.csv("D:/RAJAGIRI/S3/BMAAR/Programs/Visualisations/car.csv")
ggplot(data = data,
aes(x=length,y = width)) + geom_line()
library(ggplot2)
ggplot(data = data,
aes(x=length,y = width)) + geom_line()
ggplot(data = data,
aes(x=length,y = width)) + geom_line(col="red")
ggplot(data = data,
aes(x=length,y = width, col = fuel_type)) + geom_line()
ggplot(data = data,
aes(x=city_mpg,y = highway_mpg)) + geom_line()
ggplot(data = data,
aes(x=city_mpg,y = highway_mpg,col = num_of_doors)) + geom_line()
ggplot(data = data,
aes(x=price,y = engine_size)) + geom_point() + geom_smooth()
ggplot(data = data,
aes(x=price,y = engine_size)) +
geom_point() + geom_smooth(method = lm, se = FALSE)
ggplot(data = data,
aes(x=engine_size,y = price )) +
geom_point() + geom_smooth(method = lm, se = FALSE)
ggplot(data = data,
aes(x=price,y=body_style, fill = aspiration)) + geom_boxplot()
ggplot(data = data,
aes(x=price,y=body_style)) + geom_boxplot(fill="green")
ggplot(data = data,
aes(x=price,y=body_style)) + geom_boxplot()
ggplot(data = data,
aes(x=rpm,y=fuel_type, fill = aspiration)) + geom_boxplot()
View(data)
ggplot(data = data,
aes(x=peak_rpm ,y=fuel_type, fill = aspiration)) + geom_boxplot()
ggplot(data = data,
aes(x=price)) + geom_area(stat="bin")
ggplot(data=data,
aes(x=price)) + geom_area(stat = "bin", fill = "blue")
ggplot(data=data,
aes(x=price)) + geom_area(stat = "bin", fill = "blue") + facet_grid(body_style)
ggplot(data=data,
aes(x=price)) + geom_area(stat = "bin") +
facet_grid(body_style)
ggplot(data=data,
aes(x=price)) + geom_area(stat = "bin",fill = body_style) +
facet_grid(body_style)
ggplot(data=data,
aes(x=price)) + geom_area(stat = "bin",fill = body_style) +
facet_grid(~body_style)
ggplot(data=data,aes(x=price))+geom_area(stat="bin")
ggplot(data=data,aes(x=price, fill = fuel_system))+geom_area(stat="bin")
setwd("D:/RAJAGIRI/S3/BMAAR/R-Programs")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
split <- sample.split(data,SplitRatio = 0.8)
train <- subset(data,split==TRUE)
test <- subset(data,split == FALSE)
View(train)
install.packages(Rpark)
install.package(Rpark)
install.packages("rpart")
(test)
View(test)
dtmodel = rpart(Species~.,train,
method = 'class')
library(rpart)
dtmodel = rpart(Species~.,train,
method = 'class')
summary(dtmodel)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(dtmodel)
data<-read.csv("D:\RAJAGIRI\S3\BMAAR\R-Programs\Datasets\titanic_data.csv")
source("~/.active-rstudio-document")
summary(dtmodel)
Summary(dtmodel)
summary(dtmodel)
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/Titanic.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/Titanic.R")
library(caret)
install.packages(caret)
install.packages("caret")
install.packages("randomForest")
library(randomForest)
#prediction
pred_dt <- predict(dtmodel, test, type="class")
print(results)
#prediction
pred_dt <- predict(dtmodel, test, type="class")
# Prediction on test data
pred_dt <- predict(dtmodel, test, type="class")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/Titanic.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/Titanic.R")
results_dt <- confusionMatrix(data=pred_dt, reference=test$survived)
print(results_dt)
cat("\nRandom Forest Results:\n")
results_rf <- confusionMatrix(data=pred_rf, reference=test$survived)
# --------------------------
rfmodel <- randomForest(survived ~ ., data=train, ntree=500, mtry=3, importance=TRUE)
rfmodel <- randomForest(survived ~ ., data=train, ntree=500, mtry=3, importance=TRUE)
# --------------------------
# Reading the data
# --------------------------
data <- read.csv("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/titanic_data.csv", na.strings = c("", "NA", "?", "NULL")))
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/Titanic.R")
source("D:/RAJAGIRI/S3/BMAAR/R-Programs/Case-Study/Titanic.R")
View(data)
install.packages("fviz")
install.packages("factoextra")
# Perform k-means clustering with 3 clusters (since we know iris has 3 species)
set.seed(123)
kmeans_result <- kmeans(iris_data, centers = 3, nstart = 25)
iris_data <- iris[, -5]
# Perform k-means clustering with 3 clusters (since we know iris has 3 species)
set.seed(123)
kmeans_result <- kmeans(iris_data, centers = 3, nstart = 25)
# Print the result
print(kmeans_result)
# Compare clustering result with actual species
table(iris$Species, kmeans_result$cluster)
# Visualize the clusters using ggplot2
library(ggplot2)
# Add cluster result to dataset
iris$Cluster <- as.factor(kmeans_result$cluster)
ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Cluster, shape = Species)) +
geom_point(size = 3) +
labs(title = "K-means Clustering on Iris Dataset") +
theme_minimal()
library(factoextra)
fviz_cluster(kmeans_result, data = iris_data,
geom = "point", ellipse.type = "convex",
palette = "jco", ggtheme = theme_minimal())
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
na.omit(data)
km <- kmeans(data,centers = 3, nstart = 25)
library(dplyr)
data%>% select(Sepal.Length,Sepal.Width, Petal.Width,Petal.Length)
km <- kmeans(data,centers = 3, nstart = 25)
na.omit(data)
km <- kmeans(data,centers = 3, nstart = 25)
kmeans_result <- kmeans(iris_data, centers = ,2 nstart = 25)
kmeans_result <- kmeans(iris_data, centers = 2, nstart = 25)
print(kmeans_result)
(iris$Species, kmeans_result$cluster)
# Compare clustering result with actual species
table(iris$Species, kmeans_result$cluster)
# Visualising using fviz cluster
fviz_cluster(kmeans_result, data = iris_data,
geom = "point", ellipse.type = "convex",
palette = "jco", ggtheme = theme_minimal())
fviz_nbclust(iris_data, kmeans, method = "wss")
fviz_nbclust(iris_data, kmeans, method = "silhouette")
fviz_nbclust(iris_data, kmeans, method = "gap_stat")
set.seed(123)
kmeans_result <- kmeans(iris_data, centers = 4, nstart = 25)
# Print the result
print(kmeans_result)
# Compare clustering result with actual species
table(iris$Species, kmeans_result$cluster)
# Visualising using fviz cluster
fviz_cluster(kmeans_result, data = iris_data,
geom = "point", ellipse.type = "convex",
palette = "jco", ggtheme = theme_minimal())
data <- read.csv("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/aprioridata.csv")
View(data)
install.packages("arules")
install.packages("arrulesViz")
library(arrules)
install.packages("arrulesViz")
library(arules)
library(arulesViz)
library(arules)
library(arules)
library(arulesViz)
install.packages("arulesViz")
tr <- read.transactions(data,format = "basket",sep = ",")
tr <- read.transactions("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/aprioridata.csv",format = "basket",sep = ",")
inspect(tr)
str(tr)
set.seed(42)
asso_rules = apriori(data = tr,
parameter = list(support = 0.04,
confidence = 0.2))
inspect(sort(asso_rules, by = "lift")[1:2])
plot(asso_rules,
method = "graph",
measure = "confidence",
shading = "lift")
inspect(sort(asso_rules, by = "lift")[1:2])
plot(asso_rules,
method = "graph",
measure = "confidence",
shading = "lift")
library(arulesViz)
inspect(sort(asso_rules, by = "lift")[1:2])
plot(asso_rules,
method = "graph",
measure = "confidence",
shading = "lift")
tr <- read.transactions("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/bask.csv",format = "single",sep = ",")
tr <- read.transactions("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/bask.csv",format = "single")
tr <- read.transactions("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/bask.csv",format = "single",sep = ",")
tr <- read.transactions("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/bask.csv",format = "single")
tr <- read.transactions("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/bask.csv",format = "single")
source("~/.active-rstudio-document")
set.seed(42)
asso_rules = apriori(data = tr,
parameter = list(support = 0.04,
confidence = 0.2))
tr <- read.transactions("D:/RAJAGIRI/S3/BMAAR/R-Programs/Datasets/bask.csv",format = "single",cols = c(1,2))
inspect(tr)
set.seed(42)
asso_rules = apriori(data = tr,
parameter = list(support = 0.04,
confidence = 0.2))
# plotting
inspect(sort(asso_rules, by = "lift")[1:2])
inspect(sort(asso_rules, by = "lift"))
plot(asso_rules,
method = "graph",
measure = "confidence",
shading = "lift")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
model <- glm(left~satisfaction_level,
data = data,
family = binomial)
summary(model)
df <- read.csv("D:/RAJAGIRI/S3/BMAAR/Datasets/Pizza_Delivery_Analytics.csv")
View(df)
lrmode <- glm(LateDelivery ~ delivery_time, family = binomial, data = df)
lrmode <- glm(LateDelivery ~ DeliveryTime_min, family = binomial, data = df)
lrmode <- glm(LateDelivery ~ DeliveryTime_min, family = binomial, data = df)
lrmodel <- glm(LateDelivery ~ DeliveryTime_min, family = binomial, data = df)
summary(lrmodel)
source("~/.active-rstudio-document")
lrmodel <- glm(LateDelivery ~ DeliveryTime_min, family = "binomial", data = df)
summary(lrmodel)
mlrmodel <- glm(LateDelivery ~ DeliveryTime_min + Distance_km, family = "binomial", data = df)
summary(mlrmodel)
source("~/.active-rstudio-document")
lrmodel <- glm(LateDelivery ~ DeliveryTime_min, family = binomial, data = train)
summary(lrmodel)
lrmodel <- glm(LateDelivery ~ DeliveryTime_min + Distance_km, family = binomial, data = train)
summary(lrmodel)
source("~/.active-rstudio-document")
